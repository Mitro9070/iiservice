name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Add SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "First few lines of SSH_PRIVATE_KEY:"
          echo "$SSH_PRIVATE_KEY" | head -n 5
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 31.128.37.35 >> ~/.ssh/known_hosts
          ls -la ~/.ssh
          ls -la ~/.ssh/id_rsa
          head -n 5 ~/.ssh/id_rsa || true
          echo "$SSH_PRIVATE_KEY" > temp_key.txt
          ls -la temp_key.txt
          head -n 5 temp_key.txt || true

      - name: Upload temp_key.txt as artifact
        uses: actions/upload-artifact@v3
        with:
          name: temp_key
          path: temp_key.txt

      - name: Copy files via SCP
        run: |
          scp -o StrictHostKeyChecking=no -r target/coze-microservice-0.0.1-SNAPSHOT.jar root@31.128.37.35:/var/iiservice

      - name: Restart application
        env:
          SERVER_PORT: 8080
        run: ssh -o StrictHostKeyChecking=no root@31.128.37.35 'pkill -f "java -jar" || true && cd /var/iiservice && nohup java -jar coze-microservice-0.0.1-SNAPSHOT.jar --server.port=$SERVER_PORT > /dev/null 2>&1 &'